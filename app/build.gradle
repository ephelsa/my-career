plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id "org.jlleitschuh.gradle.ktlint" version "9.4.1"
}

ext.readProperty = { prop, filename ->
    if (project.hasProperty(prop)) {
        return project.getProperties().get(prop)
    } else {
        Properties properties = new Properties()
        if (rootProject.file(filename).exists()) {
            properties.load(new FileInputStream(rootProject.file(filename)))
        } else {
            throw new InvalidUserDataException("Must define " + prop + " in " + filename + " file or propject property for build")
        }

        return properties.getProperty(prop)
    }
}

def keystoreFile = 'keystore.properties'
def apiFile = 'api.properties'

android {
    signingConfigs {
        release {
            storeFile file(rootProject.file('app/upload-keystore.jks'))
            storePassword readProperty('STORE_PASSWORD', keystoreFile)
            keyAlias readProperty('KEY_ALIAS', keystoreFile)
            keyPassword readProperty('KEY_PASSWORD', keystoreFile)
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.github.ephelsa.mycareer"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 3
        versionName "2.2.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            signingConfig signingConfigs.release

            buildConfigField("String", "API_URL", "\"${readProperty("URL_BASE", apiFile)}\"")
        }
        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'

            buildConfigField("String", "API_URL", "\"http://192.168.1.2:3000/\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    buildFeatures {
        viewBinding true
    }
    lintOptions {
        disable "UnsafeExperimentalUsageError",
                "UnsafeExperimentalUsageWarning"
    }
}

dependencies {
    implementation project(':domain')
    implementation project(':data')
    implementation project(':usecase')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation coroutines.values()
    implementation androidX.values()
    implementation material.values()
    implementation http.values()
    implementation persistence.values()
    implementation lifecycle.values()

    kapt kapt.values()

    testImplementation unitTest.values()
    debugImplementation("androidx.fragment:fragment-testing:${versions.FragmentTesting}") {
        exclude group: 'androidx.test', module: 'core'
    }
    androidTestImplementation androidTest.values()
}